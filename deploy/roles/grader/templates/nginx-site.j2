upstream {{ appname }}_server {
    server localhost:{{ localport }} fail_timeout=0;
}
 
# Redirect all HTTP requests to HTTPS to protect sensitive data
server {

    listen 80;
    server_name {{ domain }} www.{{ domain }};
    return 301 https://$server_name$request_uri;

}

server {

    # Only listen for HTTPS requests.
    # The incoming data is sensitive and needs to be encrypted.
    listen 443 ssl;

    server_name {{ domain }} www.{{ domain }};
    ssl_certificate /etc/nginx/ssl/{{ appname }}/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ appname }}/nginx.key;

    # According to a Server Fault post, this line will prevent
    # some man in the middle attacks.
    # http://serverfault.com/questions/67316
    add_header Strict-Transport-Security "max-age=31536000";

    keepalive_timeout 5;
 
    location /static/ {
        alias {{ flask_dir }}/static/;
    }
 
    # Redirect the rest to your django app server
    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
 
        if (!-f $request_filename) {
            proxy_pass http://{{ appname }}_server;
            break;
        }
    }

}
